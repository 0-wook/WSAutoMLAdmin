buildscript {
    ext {
        queryDslVersion = '5.0.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "3.3.0"
    id 'org.asciidoctor.convert' version '2.4.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'jacoco'
    id "org.sonarqube" version "3.4.0.2513"
}

group = 'kr.or.automl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.security:spring-security-oauth2-client'

    implementation 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    implementation 'org.springframework.session:spring-session-jdbc'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    implementation project(':app:common')
    testImplementation(testFixtures(project(":app:common")))
}

asciidoctor {
    dependsOn test
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.4.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

def frontendDir = "$rootProject.rootDir/app/admin-web"

node {
    download = false
    nodeProjectDir = file("${frontendDir}")
}

task npmBuild(type: NpmTask) {
    args = ["run", "build"]
}

task copyFrontendBuildFiles(type: Copy) {
    from "$frontendDir/build"
    into "$buildDir/resources/main/static"
}

task setUpFrontEnd(type: GradleBuild) {
    tasks = ["npmInstall", "npmBuild", "copyFrontendBuildFiles"]
}

bootJar.dependsOn("setUpFrontEnd")

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝

jacoco {
    // JaCoCo 버전
    toolVersion = '0.8.7'

//  테스트결과 리포트를 저장할 경로 변경
//  default는 "$/jacoco"
}

jacocoTestReport {
    reports {
        // 원하는 리포트를 켜고 끌 수 있습니다.
        html.enabled true
        xml.enabled true
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

test {
    useJUnitPlatform()

    finalizedBy 'jacocoTestReport'
}

sonarqube {
    properties {
        property "sonar.projectKey", "wise-pangnem_AutoMLMainWeb"
        property "sonar.organization", "wise-pangnem"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "admin-server"
    }
}

subprojects {
    version = '1.0'
    sonarqube {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.tests", "src/test"

            // I was testing with JaCoCo, so the next line is not needed if you're using some other tool
            property "sonar.coverage.jacoco.xmlReportPaths", "../build/reports/jacoco/test/jacocoTestReport.xml"
            property "sonar.host.url", "https://sonarcloud.io"
        }
    }
}
